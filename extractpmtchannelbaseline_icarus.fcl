#
# Purpose: writes PMT waveform baseline into a data product.
# Author:  Gianluca Petrillo (petrillo@slac.stanford.edu)
# Date:    February 4, 2023
#
# This job configuration applies the `opdet::SharedWaveformBaseline` algorithm
# to the input data, and stores the result into a data product.
# 
# The algorithm attempts to extract a common baseline from all the PMT waveforms
# recorded on the same channel and event using the starting part of the
# waveforms. More details are in the algorithm class documentation.
# 
# The job is set up for data-like waveforms, and in particular:
#  * the input data product tag matches the standard one from ICARUS stage0
#  * PMT readout configuration information is required
# 
# 
# Input
# ------
# 
# Standard Stage0 and decodePMT output files contain the needed information
# (Stage1 files may not contain it any more!):
# 
# * `daqPMT` (`std::vector<raw::OpDetWaveform>`): the PMT recorded waveforms
# * `pmtconfig` (`sbn::PMTConfiguration`, run data product): the PMT readout
#     configuration settings
# 
# Output
# -------
# 
# A replica out the input file, with in addition:
#  * `std::vector<icarus::WaveformBaseline>` (`pmtbaselines`): baselines per channel
#  * `std::vector<icarus::WaveformRMS>` (`pmtbaselines`): baseline RMS per channel
# 
# Baseline plots are produced in the `pmtbaselines` directory of the
# supplemental ROOT file.
#
#

# ------------------------------------------------------------------------------
#include "services_common_icarus.fcl"
#include "rootoutput_icarus.fcl"


# ------------------------------------------------------------------------------
process_name: PMTbline


# ------------------------------------------------------------------------------
services: @local::icarus_minimum_services


# ------------------------------------------------------------------------------
physics: {
producers: {
pmtbaselines: {

		      @local::icarus_opreco_pedestal_fromchannel_data

# enable plots
			      PlotBaselines: true
			      BaselineTimeAverage: 600.0 # seconds

	      } # pmtbaselines
	   } # producers


reco:    [ pmtbaselines ]

		 streams: [ rootoutput ]

} # physics


# ------------------------------------------------------------------------------
outputs.rootoutput: @local::icarus_rootoutput  # from rootoutput_icarus.fcl


# ------------------------------------------------------------------------------
outputs.rootoutput.outputCommands: [ "drop *", "keep *_*_*_PMTbline" ]

# ------------------------------------------------------------------------------

icarus_opreco_pedestal_fromchannel_data: {
# this is not by itself a pedestal algorithm in the optical hit reconstruction
# mini-framework; it extracts the baseline from multiple waveforms on the same
# channel (which the mini-framework does not support) and writes the result in
# a data product; a heavily hacked pedestal algorithm in the mini-framework
# can plug the baselines from that data product into the hit reconstruction.
module_type: PMTWaveformBaselinesFromChannelData

# data configuration
		     OpticalWaveforms: daqPMT
		     PMTconfigurationTag: pmtconfig

# use half the pre-trigger buffer (ICARUS 2022 configuration: 750 samples)
		     PretriggerBufferFractionForBaseline: 0.5

# waveform on beam gate is the most likely to have signal from its start;
# systematically exclude it if there are enough other waveforms available:
		     ExcludeSpillTimeIfMoreThan: 8

		     AlgoParams: {

# if a waveform has 4 or more samples farther than 5 RMS from the median,
# do not use it (still, RMS estimation is biassed by those samples too)
AcceptedSampleRangeRMS: 5.0
				ExcessSampleLimit: 4

		     }
PlotBaselines: false

} # icarus_opreco_pedestal_fromchannel_data
